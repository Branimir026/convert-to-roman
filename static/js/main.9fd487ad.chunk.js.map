{"version":3,"sources":["Converter.js","App.js","index.js"],"names":["Converter","props","state","number","romanNumeral","handleInputChange","bind","handleKeyPress","convertToRoman","e","target","value","this","setState","key","preventDefault","num","toString","ones","tens","hundreds","tousands","romNum","i","length","push","join","className","Form","FormGroup","controlId","Row","Col","xs","span","offset","md","FormLabel","FormControl","size","required","type","maxLength","placeholder","onChange","onKeyPress","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUA6GeA,E,kDAlGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,GACRC,aAAc,IAEhB,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBARL,E,qDAWnB,SAAkBG,GACZA,EAAEC,OAAOC,OAAS,GAAKF,EAAEC,OAAOC,OAAS,KAC3CC,KAAKC,SAAS,CACZV,OAAQM,EAAEC,OAAOC,QAGnBC,KAAKC,SAAS,CACZV,OAAQ,O,4BAKd,SAAeM,GACC,UAAVA,EAAEK,KAAyC,KAAtBF,KAAKV,MAAMC,SAClCM,EAAEM,iBACFH,KAAKJ,eAAeI,KAAKV,MAAMC,W,4BAInC,SAAea,GACbA,EAAMA,EAAIC,WASV,IAPA,IAAMC,EAAO,CAAC,IAAK,KAAM,MAAO,KAAM,IAAK,KAAM,MAAO,OAAQ,MAC1DC,EAAO,CAAC,IAAK,KAAM,MAAO,KAAM,IAAK,KAAM,MAAO,OAAQ,MAC1DC,EAAW,CAAC,IAAK,KAAM,MAAO,KAAM,IAAK,KAAM,MAAO,OAAQ,MAC9DC,EAAW,CAAC,IAAK,KAAM,OAEzBC,EAAS,GAEJC,EAAI,EAAGA,EAAIP,EAAIQ,OAAQD,IAC1BP,EAAIQ,OAASD,IAAM,EACrBD,EAAOG,KAAKJ,EAASL,EAAIO,GAAK,IACrBP,EAAIQ,OAASD,IAAM,EAC5BD,EAAOG,KAAKL,EAASJ,EAAIO,GAAK,IACrBP,EAAIQ,OAASD,IAAM,EAC5BD,EAAOG,KAAKN,EAAKH,EAAIO,GAAK,IAE1BD,EAAOG,KAAKP,EAAKF,EAAIO,GAAK,IAI9BD,EAASA,EAAOI,KAAK,IAErBd,KAAKC,SAAS,CACZT,aAAckB,M,oBAIlB,WACE,OACE,qBAAKK,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAWC,UAAU,gBAArB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAxD,SACE,cAACE,EAAA,EAAD,CAAWV,UAAU,YAArB,qCAGJ,cAACI,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAxD,SACE,cAACG,EAAA,EAAD,CACEC,KAAK,KACLZ,UAAU,YACVa,UAAQ,EACRC,KAAK,OACLC,UAAW,EACXC,YAAY,OACZhC,MAAOC,KAAKV,MAAMC,OAClByC,SAAUhC,KAAKP,kBACfwC,WAAYjC,KAAKL,qBAIvB,cAACwB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAzD,SACE,cAACE,EAAA,EAAD,CAAWV,UAAU,eAArB,SACGf,KAAKV,MAAME,8B,GAxFN0C,IAAMC,WCOfC,MAZf,WACE,OACE,sBAAKrB,UAAU,gBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,kDACA,0FAEF,cAAC,EAAD,QCPNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9fd487ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormGroup from \"react-bootstrap/FormGroup\";\r\nimport FormLabel from \"react-bootstrap/FormLabel\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Converter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number: \"\",\r\n      romanNumeral: \"\",\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.convertToRoman = this.convertToRoman.bind(this);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    if (e.target.value >= 1 && e.target.value <= 3999) {\r\n      this.setState({\r\n        number: e.target.value,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        number: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.key === \"Enter\" && this.state.number !== \"\") {\r\n      e.preventDefault();\r\n      this.convertToRoman(this.state.number);\r\n    }\r\n  }\r\n\r\n  convertToRoman(num) {\r\n    num = num.toString();\r\n\r\n    const ones = [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"];\r\n    const tens = [\"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"];\r\n    const hundreds = [\"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"];\r\n    const tousands = [\"M\", \"MM\", \"MMM\"];\r\n\r\n    let romNum = [];\r\n\r\n    for (let i = 0; i < num.length; i++) {\r\n      if (num.length - i === 4) {\r\n        romNum.push(tousands[num[i] - 1]);\r\n      } else if (num.length - i === 3) {\r\n        romNum.push(hundreds[num[i] - 1]);\r\n      } else if (num.length - i === 2) {\r\n        romNum.push(tens[num[i] - 1]);\r\n      } else {\r\n        romNum.push(ones[num[i] - 1]);\r\n      }\r\n    }\r\n\r\n    romNum = romNum.join(\"\");\r\n\r\n    this.setState({\r\n      romanNumeral: romNum,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"converter\">\r\n        <Form>\r\n          <FormGroup controlId=\"converterForm\">\r\n            <Row>\r\n              <Col xs={{ span: 8, offset: 2 }} md={{ span: 4, offset: 4 }}>\r\n                <FormLabel className=\"formLabel\">Enter number 1-3999</FormLabel>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={{ span: 6, offset: 3 }} md={{ span: 2, offset: 5 }}>\r\n                <FormControl\r\n                  size=\"lg\"\r\n                  className=\"formInput\"\r\n                  required\r\n                  type=\"text\"\r\n                  maxLength={4}\r\n                  placeholder=\"1234\"\r\n                  value={this.state.number}\r\n                  onChange={this.handleInputChange}\r\n                  onKeyPress={this.handleKeyPress}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n                <FormLabel className=\"romanNumeral\">\r\n                  {this.state.romanNumeral}\r\n                </FormLabel>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Converter from \"./Converter\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"app container\">\n      <div className=\"header\">\n        <h1>Convert To Roman</h1>\n        <h3>Convert any number from 1 to 3999 to a roman numeral.</h3>\n      </div>\n      <Converter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}